<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Colorful Tree]]></title>
    <url>%2F2019%2F06%2F20%2FColorful-Tree%2F</url>
    <content type="text"><![CDATA[题目链接题意 一棵有n个节点的树，每个点有一个点权，问在这棵树上所有的$\frac{n(n-1)}{2}$条链颜色种类的和是多少。 思路 对于每种颜色计算其贡献，我们可以先算出每种颜色在多少条链中不出现，用总数减一下就可以得到在多少条链中出现，dfs序处理一下，遍历到一个点的时候我只考虑这个点与其儿子构成的连同块，在这些块里面都不出现这个颜色。 dfs1234567891011121314151617void dfs(int u, int f)&#123; sz[u] = 1; ll all = 0; for (auto &amp;v : G[u]) &#123; if (v == f) continue; ll last = sum[c[u]]; dfs(v, u); sz[u] += sz[v]; ll add = sum[c[u]] - last; ans += (sz[v] - add) * (sz[v] - add - 1) / 2; all += sz[v] - add; &#125; sum[c[u]] += all + 1;&#125; 1234567891011int main()&#123; for (int i = 1; i &lt;= n; i++) &#123; if (!hasc[i]) continue; ans += (n - sum[i]) * (n - sum[i] - 1) / 2ll; &#125; printf("%lld\n", (n - 1) * n / 2 * cnt - ans); return 0;&#125;]]></content>
      <categories>
        <category>acm</category>
        <category>做题记录</category>
        <category>2017杭电多校赛</category>
        <category>第一场</category>
      </categories>
      <tags>
        <tag>Tree</tag>
        <tag>dfs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Balala Power!]]></title>
    <url>%2F2019%2F06%2F19%2FBalala-Power%2F</url>
    <content type="text"><![CDATA[题目链接题意输入n个字符串，重新定义字母’a’~’z’的权值，使得给出的字符串在26进制下和最大 思路记录每个字母在每个位置出现的次数，按照贪心高为出现次数多的字母权值大排序（别暴力排，比赛时用个堆维护，一个数组记录最高位置）]]></content>
      <categories>
        <category>acm</category>
        <category>做题记录</category>
        <category>2017杭电多校赛</category>
        <category>第一场</category>
      </categories>
      <tags>
        <tag>Greedy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Add More Zero]]></title>
    <url>%2F2019%2F06%2F19%2FAdd-More-Zero%2F</url>
    <content type="text"><![CDATA[题目链接题意 输入m，求最大k满足： 10^{k} \leq 2^{m} 其中$1 \leq m \leq 10^{5}$. 思路 因为当k与m均为整数时, 10^{k} \neq 2^{m}10^{k} \leq 2^{m}k \leq lg(2^{m}) = mlg(2) 直接计算答案]]></content>
      <categories>
        <category>acm</category>
        <category>做题记录</category>
        <category>2017杭电多校赛</category>
        <category>第一场</category>
      </categories>
      <tags>
        <tag>Math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[my first blog]]></title>
    <url>%2F2019%2F06%2F19%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[Congratulations for my first blog on github!!!Thanks to github and hexo. Then I probably test some function on this page. Cpp code1234567#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123; printf("Hello, world.\n"); return 0;&#125; linkmore markdown rules fomularFibonacci comes like this: F(n)=F(n-1)+F(n-2)Euler function: n = \sum_{d|n} \phi (d)]]></content>
  </entry>
</search>
